{"version":3,"sources":["endpoints-manager/endpoints-actions.js","constants.js","utils/dynamic-refs-util.js","components/card.js","endpoints-manager/endpoints-grid-renderer.js","providers/action-logs-provider.js","components/loader.js","endpoints-manager/endpoints-manager.js","components/data-grid.js","endpoints-logs/endpoints-logs.js","components/app-header.js","App.js","index.js"],"names":["EndpointsActionsWrapper","styled","div","EndpointsActions","actions","onActionBtnClick","disabled","map","action","Button","variant","onClick","actionLabel","actionType","ENDPONT_ITEMS_MAPPER","Object","freeze","id","label","type","ENDPOINTS_ACTIONS","ENDPOINTS_ACTIONS_GRID_COLUMNS","field","headerName","flex","APP_LINKS","page","link","TEXT","ENDPOINT_MANAGEMENT_SYSTEM","PRIMARY","ENDPOINT_ACTION_LOGS","DEVICE_NAME","ADD","CLEAR","AVAILABLE_ENDPOINTS","API_ERROR","ACTION_SUCCESS","SELECTED","this","refsMap","Map","key","console","log","get","refForKey","React","createRef","set","CardWrapper","DataCard","itemMapper","item","renderPrimaryText","renderSecondaryText","Card","ref","dynamicRefsUtil","setRef","CardContent","mapper","EndpointsGridRenderer","endpointsData","onGridItemClick","Grid","container","rowSpacing","columnSpacing","xs","sm","md","lg","endPointItem","xl","value","Typography","sx","fontSize","color","gutterBottom","memo","ActionLogsContext","createContext","ActionLogsProvider","children","callbackRef","useRef","useReducer","previousState","nextState","actionLogs","setActionLogs","useEffect","length","current","Provider","addActionLogs","actionLog","callback","Loader","open","Backdrop","zIndex","theme","drawer","CircularProgress","ScreenLabel","EndpointsManagerWrapper","main","reducer","state","stateCopy","idx","indexOf","payload","splice","push","EndpointsManager","useState","setEndpointsData","isLoading","setIsLoading","useContext","selectedEndpointsData","setSelectedEndpointsData","fetch","then","response","json","catch","err","toast","error","useCallback","event","deviceName","target","getAttribute","cardRef","getRef","classList","contains","remove","add","actionLogsPayload","Date","getTime","devices","toString","time","toLocaleString","success","forEach","DataGridWrapper","rows","columns","style","height","width","DataGrid","EndpointsLogs","Consumer","ctx","Component","AppHeader","appName","appLinks","anchorElNav","setAnchorElNav","navigate","useNavigate","handleCloseNavMenu","handleBtnClick","AppBar","position","Container","maxWidth","Toolbar","disableGutters","noWrap","component","mr","display","Box","flexGrow","IconButton","size","currentTarget","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","onClose","MenuItem","textAlign","my","App","className","path","element","rootElement","document","getElementById","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.146902e0.chunk.js","sourcesContent":["import { Button } from \"@mui/material\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst EndpointsActionsWrapper = styled.div`\n  float: right;\n  & > button:not(:last-child) {\n    margin-right: 0.6rem;\n  }\n`;\n\nfunction EndpointsActions({ actions, onActionBtnClick, disabled }) {\n  return (\n    <EndpointsActionsWrapper>\n      {actions.map((action) => {\n        return (\n          <Button\n            key={action.actionType}\n            variant=\"contained\"\n            disabled={disabled}\n            onClick={() => onActionBtnClick(action.actionLabel)}\n          >\n            {action.actionLabel}\n          </Button>\n        );\n      })}\n    </EndpointsActionsWrapper>\n  );\n}\n\nexport default EndpointsActions;\n","export const ENDPONT_ITEMS_MAPPER = Object.freeze([\n  { id: \"deviceName\", label: \"Device Name\", type: \"primary\" },\n  { id: \"status\", label: \"Status\", type: \"secondary\" },\n  { id: \"applicationCount\", label: \"Application Count\", type: \"secondary\" },\n  { id: \"operatingSystem\", label: \"Operating System\", type: \"secondary\" },\n  { id: \"ipAddress\", label: \"IP Address\", type: \"secondary\" }\n]);\n\nexport const ENDPOINTS_ACTIONS = Object.freeze([\n  { actionType: \"scan\", actionLabel: \"Scan\" },\n  { actionType: \"terminate\", actionLabel: \"Terminate\" }\n]);\n\nexport const ENDPOINTS_ACTIONS_GRID_COLUMNS = Object.freeze([\n  { field: \"action\", headerName: \"Action\", flex: 1 },\n  { field: \"devices\", headerName: \"Devices\", flex: 1 },\n  { field: \"time\", headerName: \"Time\", flex: 1 }\n]);\n\nexport const APP_LINKS = Object.freeze([\n  { page: \"Endpoints Manager\", link: \"/manager\" },\n  { page: \"Endpoints Logs\", link: \"/logs\" }\n]);\n\nexport const TEXT = Object.freeze({\n  ENDPOINT_MANAGEMENT_SYSTEM: \"Endpoint Management System\",\n  PRIMARY: \"primary\",\n  ENDPOINT_ACTION_LOGS: \"Endpoints Action Logs\",\n  DEVICE_NAME: \"deviceName\",\n  ADD: \"ADD\",\n  CLEAR: \"CLEAR\",\n  AVAILABLE_ENDPOINTS: \"Available Endpoints\",\n  API_ERROR: \"Error while fetching data...\",\n  ACTION_SUCCESS: \"Action Successful!\",\n  SELECTED: \"selected\"\n});\n","import React from \"react\";\n\nclass DynamicRefsUtil {\n  constructor() {\n    this.refsMap = new Map();\n  }\n\n  getRef(key) {\n    console.log(this.refsMap);\n    return this.refsMap.get(key);\n  }\n\n  setRef(key) {\n    const refForKey = React.createRef();\n    this.refsMap.set(key, refForKey);\n    return refForKey;\n  }\n}\n\nexport default new DynamicRefsUtil();\n","import Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { TEXT } from \"../constants\";\nimport dynamicRefsUtil from \"../utils/dynamic-refs-util\";\n\nconst CardWrapper = styled.div`\n  & .MuiCard-root {\n    min-height: 12.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    pointer-events: none;\n    &.selected {\n      background-color: lightgrey;\n    }\n  }\n`;\n\nexport default function DataCard({\n  itemMapper,\n  item,\n  renderPrimaryText,\n  renderSecondaryText,\n  id\n}) {\n  return (\n    <CardWrapper data-id={item[id]}>\n      <Card ref={dynamicRefsUtil.setRef(item[id])}>\n        <CardContent>\n          {itemMapper.map((mapper) => {\n            return (\n              <div key={`${item[id]}_${mapper.id}`}>\n                {(() => {\n                  if (mapper.type === TEXT.PRIMARY) {\n                    return renderPrimaryText(mapper.label, item[mapper.id]);\n                  } else {\n                    return renderSecondaryText(mapper.label, item[mapper.id]);\n                  }\n                })()}\n              </div>\n            );\n          })}\n        </CardContent>\n      </Card>\n    </CardWrapper>\n  );\n}\n","import { Grid } from \"@mui/material\";\nimport React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { ENDPONT_ITEMS_MAPPER, TEXT } from \"../constants\";\nimport DataCard from \"../components/card\";\n\nfunction EndpointsGridRenderer({ endpointsData = [], onGridItemClick }) {\n  return (\n    <Grid\n      container\n      rowSpacing={4}\n      columnSpacing={{ xs: 1, sm: 2, md: 3, lg: 4 }}\n      onClick={onGridItemClick}\n    >\n      {endpointsData.map((endPointItem) => {\n        return (\n          <Grid key={endPointItem.id} item xs={12} sm={6} md={4} lg={4} xl={3}>\n            <DataCard\n              id={TEXT.DEVICE_NAME}\n              itemMapper={ENDPONT_ITEMS_MAPPER}\n              item={endPointItem}\n              renderPrimaryText={(label, value) => {\n                return (\n                  <Typography\n                    sx={{ fontSize: 18 }}\n                    color=\"text.primary\"\n                    gutterBottom\n                  >\n                    <b>{label}</b> :{value}\n                  </Typography>\n                );\n              }}\n              renderSecondaryText={(label, value) => {\n                return (\n                  <Typography sx={{ fontSize: 14 }} color=\"text.secondary\">\n                    <b>{label}</b> :{value}\n                  </Typography>\n                );\n              }}\n            />\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n}\n\nexport default React.memo(EndpointsGridRenderer);\n","import React, { useContext, useEffect, useReducer, useRef } from \"react\";\n\nexport const ActionLogsContext = React.createContext();\n\nexport const useActionLogs = () => useContext(ActionLogsContext);\n\nexport function ActionLogsProvider({ children }) {\n  const callbackRef = useRef();\n  const [actionLogs, setActionLogs] = useReducer(\n    (previousState, nextState) => [...previousState, nextState],\n    []\n  );\n\n  useEffect(() => {\n    console.log({ actionLogs });\n    if (actionLogs.length) {\n      callbackRef.current(\"success\");\n    }\n  }, [actionLogs]);\n\n  const addActionLogs = (actionLog, callback) => {\n    callbackRef.current = callback;\n    setActionLogs(actionLog);\n  };\n\n  return (\n    <ActionLogsContext.Provider\n      value={{\n        actionLogs,\n        addActionLogs\n      }}\n    >\n      {children}\n    </ActionLogsContext.Provider>\n  );\n}\n","import * as React from \"react\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nexport default function Loader({ open }) {\n  return (\n    <div>\n      <Backdrop\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={open}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n","import styled from \"styled-components\";\nimport React, { useCallback, useEffect, useReducer, useState } from \"react\";\nimport EndpointsActions from \"./endpoints-actions\";\nimport EndpointsGridRenderer from \"./endpoints-grid-renderer\";\nimport { ENDPOINTS_ACTIONS, TEXT } from \"../constants\";\nimport { useActionLogs } from \"../providers/action-logs-provider\";\nimport dynamicRefsUtil from \"../utils/dynamic-refs-util\";\nimport { toast } from \"react-toastify\";\nimport Loader from \"../components/loader\";\n\nconst ScreenLabel = styled.div`\n  float: left;\n  width: 100%;\n  font-size: 1.25rem;\n`;\n\nconst EndpointsManagerWrapper = styled.main`\n  padding: 1.25rem;\n  margin-top: 3.125rem;\n`;\n\nfunction reducer(state = [], action) {\n  switch (action.type) {\n    case TEXT.ADD: {\n      const stateCopy = [...state];\n      const idx = stateCopy.indexOf(action.payload);\n      if (idx > -1) {\n        stateCopy.splice(idx, 1);\n      } else {\n        stateCopy.push(action.payload);\n      }\n      return stateCopy;\n    }\n    case TEXT.CLEAR: {\n      return [];\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default function EndpointsManager() {\n  const [endpointsData, setEndpointsData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { addActionLogs } = useActionLogs();\n  const [selectedEndpointsData, setSelectedEndpointsData] = useReducer(\n    reducer,\n    []\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\"https://api.mockaroo.com/api/08100050?count=1000&key=3e2ade60\")\n      .then((response) => response.json())\n      .then((response) => {\n        setEndpointsData(response);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        toast.error(TEXT.API_ERROR);\n      });\n  }, []);\n\n  const clearSelectedEndpointsData = () => {\n    selectedEndpointsData.forEach((deviceName) => {\n      const cardRef = dynamicRefsUtil.getRef(deviceName);\n      cardRef.current.classList.remove(TEXT.SELECTED);\n    });\n    setSelectedEndpointsData({ type: TEXT.CLEAR });\n  };\n\n  const onActionBtnClick = (actionLabel) => {\n    const actionLogsPayload = {\n      id: new Date().getTime(),\n      action: actionLabel,\n      devices: selectedEndpointsData.toString(),\n      time: new Date().toLocaleString()\n    };\n    addActionLogs(actionLogsPayload, () => {\n      toast.success(TEXT.ACTION_SUCCESS);\n      clearSelectedEndpointsData();\n    });\n  };\n\n  const onGridItemClick = useCallback(\n    (event) => {\n      const deviceName = event.target.getAttribute(\"data-id\");\n      const cardRef = dynamicRefsUtil.getRef(deviceName);\n      if (cardRef.current.classList.contains(TEXT.SELECTED)) {\n        cardRef.current.classList.remove(TEXT.SELECTED);\n      } else {\n        cardRef.current.classList.add(TEXT.SELECTED);\n      }\n      setSelectedEndpointsData({ type: TEXT.ADD, payload: deviceName });\n    },\n    [setSelectedEndpointsData]\n  );\n\n  return (\n    <EndpointsManagerWrapper>\n      <ScreenLabel>{TEXT.AVAILABLE_ENDPOINTS}</ScreenLabel>\n      <EndpointsActions\n        actions={ENDPOINTS_ACTIONS}\n        disabled={!selectedEndpointsData.length}\n        onActionBtnClick={onActionBtnClick}\n      />\n      <EndpointsGridRenderer\n        endpointsData={endpointsData}\n        onGridItemClick={onGridItemClick}\n      />\n      <Loader open={isLoading} />\n    </EndpointsManagerWrapper>\n  );\n}\n","import React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\nexport default function DataGridWrapper({ rows, columns }) {\n  return (\n    <div style={{ height: '18.75rem', width: \"100%\" }}>\n      <DataGrid rows={rows} columns={columns} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport DataGridWrapper from \"../components/data-grid\";\nimport { ENDPOINTS_ACTIONS_GRID_COLUMNS, TEXT } from \"../constants\";\nimport { ActionLogsContext } from \"../providers/action-logs-provider\";\n\nconst EndpointsActionsWrapper = styled.main`\n  padding: 1.25rem;\n  margin-top: 3.125rem;\n`;\n\nconst ScreenLabel = styled.div`\n  float: left;\n  width: 100%;\n  font-size: 1.2rem;\n`;\n\nclass EndpointsLogs extends React.Component {\n  render() {\n    return (\n      <ActionLogsContext.Consumer>\n        {(ctx) => {\n          return (\n            <EndpointsActionsWrapper>\n              <ScreenLabel id=\"screenLabel\">{TEXT.ENDPOINT_ACTION_LOGS}</ScreenLabel>\n              <DataGridWrapper\n                rows={ctx.actionLogs}\n                columns={ENDPOINTS_ACTIONS_GRID_COLUMNS}\n              />\n            </EndpointsActionsWrapper>\n          );\n        }}\n      </ActionLogsContext.Consumer>\n    );\n  }\n}\n\nexport default EndpointsLogs;\n","import MenuIcon from \"@mui/icons-material/Menu\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AppHeader = ({ appName, appLinks }) => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  let navigate = useNavigate();\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleBtnClick = (link) => {\n    handleCloseNavMenu();\n    navigate(link);\n  };\n\n  return (\n    <AppBar position=\"fixed\">\n      <Container maxWidth=\"false\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\n          >\n            {appName}\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"app pages\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\"\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\"\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: \"block\", md: \"none\" }\n              }}\n            >\n              {appLinks.map((page) => (\n                <MenuItem\n                  key={page.page}\n                  onClick={() => handleBtnClick(page.link)}\n                >\n                  <Typography textAlign=\"center\">{page.page}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}\n          >\n            {appName}\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            {appLinks.map((page) => (\n              <Button\n                key={page.page}\n                onClick={() => handleBtnClick(page.link)}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                {page.page}\n              </Button>\n            ))}\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default AppHeader;\n","import EndpointsManager from \"./endpoints-manager/endpoints-manager\";\nimport \"./styles.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Routes, Route } from \"react-router-dom\";\nimport EndpointsLogs from \"./endpoints-logs/endpoints-logs\";\nimport { APP_LINKS, TEXT } from \"./constants\";\nimport AppHeader from \"./components/app-header\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <AppHeader\n        appName={TEXT.ENDPOINT_MANAGEMENT_SYSTEM}\n        appLinks={APP_LINKS}\n      />\n      <Routes>\n        <Route path=\"/\" element={<EndpointsManager />} />\n        <Route path=\"manager\" element={<EndpointsManager />} />\n        <Route path=\"logs\" element={<EndpointsLogs />} />\n      </Routes>\n      <ToastContainer />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { ActionLogsProvider } from \"./providers/action-logs-provider\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <BrowserRouter basename=\"/endpoint-management-system\">\n      <ActionLogsProvider>\n        <App />\n      </ActionLogsProvider>\n    </BrowserRouter>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}